freq() { echo "$((`cat /sys/devices/system/cpu/cpu$1/cpufreq/$2_cur_freq` / 1000)) MHz"; }
volt() { echo "$((`cat /sys/kernel/debug/voltage/vdd_$1/curr_vp_volt` / 1000)) mV"; }
BB=/sbin/busybox;
case $1 in
  generic)
    echo "$(cat $2)$3";
  ;;

  percent)
    if [ `cat $3` -gt 0 ]; then
      echo "$(awk -v a=`cat $2` -v b=`cat $3` 'BEGIN { printf "%.1f", a / b * 100 }')%";
    else
      echo "N/A";
    fi;
  ;;

  cpufreq)
    if [ -e /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq ]; then
      CPUFREQONE=$(freq 0 scaling);
    else
      CPUFREQONE=Offline;
    fi

    if [ -e /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq ]; then
      CPUFREQTWO=$(freq 1 scaling);
    else
      CPUFREQTWO=Offline;
    fi

    VOLT=$(volt mpu);
    test ${#VOLT} -gt 6 && spacer=" - " || spacer="-";

    echo "Core 1: $CPUFREQONE     $VOLT@nCore 2: $CPUFREQTWO         $spacer         $dummy";
  ;;
  CPUFrequency)
		CPU0=`$BB cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq 2> /dev/null`;
		CPU1=`$BB cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq 2> /dev/null`;
		CPU2=`$BB cat /sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq 2> /dev/null`;
		CPU3=`$BB cat /sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq 2> /dev/null`;
		
		if [ -z "$CPU0" ]; then CPU0="Offline"; else CPU0="$((CPU0 / 1000)) MHz"; fi;
		if [ -z "$CPU1" ]; then CPU1="Offline"; else CPU1="$((CPU1 / 1000)) MHz"; fi;
		if [ -z "$CPU2" ]; then CPU2="Offline"; else CPU2="$((CPU2 / 1000)) MHz"; fi;
		if [ -z "$CPU3" ]; then CPU3="Offline"; else CPU3="$((CPU3 / 1000)) MHz"; fi;
		
		$BB echo "Core 0: $CPU0@nCore 1: $CPU1@nCore 2: $CPU2@nCore 3: $CPU3";
	;;
  proclist)
    echo "$(cat /proc/$2 | readlines r $3 $4 | awk 1 ORS='@n')";
  ;;

  swapused)
    echo "$(free -b | grep Swap | awk '{ print $3 }')";
  ;;

  swapfree)
    echo "$(free -b | grep Swap | awk '{ print $4 }')";
  ;;

  bootloader)
    lockstate=`dd ibs=1 count=1 skip=124 obs=1 if=/dev/block/platform/omap/omap_hsmmc.0/by-name/param 2>/dev/null | od -xv 2>/dev/null | head -n 1 | tr -d " " | rev | cut -c -2 | rev`;
    if [ "$lockstate" == "01" ]; then
      echo "Locked";
    elif [ "$lockstate" == "00" ]; then
      echo "Unlocked";
    else
      echo "Unknown";
    fi;
  ;;
	Time)
		STATE="";
		CNT=0;
		SUM=`$BB awk '{s+=$2} END {print s}' /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state`;
		
		while read FREQ TIME; do
			if [ "$CNT" -ge $2 ] && [ "$CNT" -le $3 ]; then
				FREQ="$((FREQ / 1000)) MHz:";
				if [ $TIME -ge "100" ]; then
					PERC=`$BB awk "BEGIN { print ( ($TIME / $SUM) * 100) }"`;
					PERC="`$BB printf "%0.1f\n" $PERC`%";
					TIME=$((TIME / 100));
					STATE="$STATE $FREQ `$BB echo - | $BB awk -v "S=$TIME" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'` ($PERC)@n";
				fi;
			fi;
			CNT=$((CNT+1));
		done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;
		
		STATE=${STATE%??};
		$BB echo "$STATE";
  ;;

UnUsed)
		UNUSED="";
		while read FREQ TIME; do
			FREQ="$((FREQ / 1000)) MHz";
			if [ $TIME -lt "100" ]; then
				UNUSED="$UNUSED$FREQ, ";
			fi;
		done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;
		
		UNUSED=${UNUSED%??};
		$BB echo "$UNUSED";
  ;;
Memory)
		while read TYPE MEM KB; do
			if [ "$TYPE" = "MemTotal:" ]; then
				TOTAL="$((MEM / 1024)) MB";
			elif [ "$TYPE" = "MemFree:" ]; then
				CACHED=$((MEM / 1024));
			elif [ "$TYPE" = "Cached:" ]; then
				FREE=$((MEM / 1024));
			fi;
		done < /proc/meminfo;
		
		FREE="$((FREE + CACHED)) MB";
		$BB echo "RamTotal: $TOTAL@nRamFree: $FREE";
	;;
	swap)
		while read TYPE MEM KB; do
			if [ "$TYPE" = "SwapTotal:" ]; then
				SWAPTOTAL="$((MEM / 1024)) MB";
			elif [ "$TYPE" = "SwapFree:" ]; then
				SWAPFREE="$((MEM / 1024)) MB";
			fi;
		done < /proc/meminfo;
		$BB echo "SwapTotal: $SWAPTOTAL@nSwapFree: $SWAPFREE";
	;;
  states)
    STATE="";
    CNT=0;
    SUM=`awk '{s+=$2} END {print s}' /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state`;

    while read FREQ TIME; do
      if [ "$CNT" -ge $2 ] && [ "$CNT" -le $3 ]; then
        FREQ="$((FREQ / 1000)) MHz";
        if [ $TIME -gt "0" ]; then
          PERC=`awk "BEGIN { print ( ($TIME / $SUM) * 100) }"`;
          PERC="`printf "%0.1f\n" $PERC`%";
          TIME=$((TIME / 100));
          STATE="$STATE $FREQ - `echo - | awk -v "S=$TIME" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'` - ($PERC)@n";
        fi;
      fi;
      CNT=$((CNT+1));
    done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;

    echo "$STATE";
  ;;
esac;

